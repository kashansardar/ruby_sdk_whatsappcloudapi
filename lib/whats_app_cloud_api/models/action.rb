# whats_app_cloud_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module WhatsAppCloudApi
  # Action Model.
  class Action < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Required for List Messages. Button content. It cannot be an empty string
    # and must be unique within the message. Emojis are supported, markdown is
    # not.
    # @return [String]
    attr_accessor :button

    # Required for Reply Buttons. You can have up to 3 buttons. You cannot have
    # leading or trailing spaces when setting the ID.
    # @return [List of Button]
    attr_accessor :buttons

    # Required for List Messages.
    # @return [List of Section]
    attr_accessor :sections

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['button'] = 'button'
      @_hash['buttons'] = 'buttons'
      @_hash['sections'] = 'sections'
      @_hash
    end

    # A mapping from model property names to types.
    def self.types
      @_types = {} if @_types.nil?
      @_types['button'] = 'String'
      @_types['buttons'] = 'Button[]'
      @_types['sections'] = 'Section[]'
      @_types
    end

    # An array for optional fields
    def self.optionals
      %w[
        button
        buttons
        sections
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(button = nil,
                   buttons = nil,
                   sections = nil)
      @button = button unless button == SKIP
      @buttons = buttons unless buttons == SKIP
      @sections = sections unless sections == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      names.each do |key, value|
        has_default_value = false
        if !((hash.key? value) || (optionals.include? key)) && !has_default_value
          raise ArgumentError,
                "#{value} is not present in the provided hash"
        end
      end

      # Extract variables from the hash.
      button = hash.key?('button') ? hash['button'] : SKIP
      # Parameter is an array, so we need to iterate through it
      buttons = nil
      unless hash['buttons'].nil?
        buttons = []
        hash['buttons'].each do |structure|
          buttons << (Button.from_hash(structure) if structure)
        end
      end

      buttons = SKIP unless hash.key?('buttons')
      # Parameter is an array, so we need to iterate through it
      sections = nil
      unless hash['sections'].nil?
        sections = []
        hash['sections'].each do |structure|
          sections << (Section.from_hash(structure) if structure)
        end
      end

      sections = SKIP unless hash.key?('sections')

      # Create object from extracted values.
      Action.new(button,
                 buttons,
                 sections)
    end
  end
end
