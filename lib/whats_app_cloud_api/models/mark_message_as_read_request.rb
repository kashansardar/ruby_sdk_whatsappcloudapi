# whats_app_cloud_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module WhatsAppCloudApi
  # MarkMessageAsReadRequest Model.
  class MarkMessageAsReadRequest < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Messaging service used for the request. Use 'whatsapp'.
    # @return [String]
    attr_accessor :messaging_product

    # A message's status. You can use this field to mark a message as read.
    # @return [String]
    attr_accessor :status

    # Id of the incoming message.
    # @return [String]
    attr_accessor :message_id

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['messaging_product'] = 'messaging_product'
      @_hash['status'] = 'status'
      @_hash['message_id'] = 'message_id'
      @_hash
    end

    # A mapping from model property names to types.
    def self.types
      @_types = {} if @_types.nil?
      @_types['messaging_product'] = 'String'
      @_types['status'] = 'String'
      @_types['message_id'] = 'String'
      @_types
    end

    # An array for optional fields
    def self.optionals
      []
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(messaging_product = nil,
                   status = nil,
                   message_id = nil)
      @messaging_product = messaging_product unless messaging_product == SKIP
      @status = status unless status == SKIP
      @message_id = message_id unless message_id == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      names.each do |key, value|
        has_default_value = false
        if !((hash.key? value) || (optionals.include? key)) && !has_default_value
          raise ArgumentError,
                "#{value} is not present in the provided hash"
        end
      end

      # Extract variables from the hash.
      messaging_product =
        hash.key?('messaging_product') ? hash['messaging_product'] : SKIP
      status = hash.key?('status') ? hash['status'] : SKIP
      message_id = hash.key?('message_id') ? hash['message_id'] : SKIP

      # Create object from extracted values.
      MarkMessageAsReadRequest.new(messaging_product,
                                   status,
                                   message_id)
    end
  end
end
